#!/bin/bash

# Tested on ubuntu 22.04

echo '---------------Prerequisite---------------'
sudo apt -y update
sudo apt -y upgrade
sudo apt install -y cmake gcc g++ git
sudo apt install -y python-dev python-numpy
sudo apt install -y python3-dev python3-numpy
sudo apt install -y libavcodec-dev libavformat-dev libswscale-dev
sudo apt install -y libgtk2.0-dev
sudo apt install -y libgtk-3-dev
sudo apt install -y libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev 
sudo apt install -y libgstreamer-plugins-bad1.0-dev gstreamer1.0-plugins-base
sudo apt install -y gstreamer1.0-plugins-good gstreamer1.0-plugins-bad
sudo apt install -y gstreamer1.0-plugins-ugly gstreamer1.0-libav gstreamer1.0-tools
sudo apt install -y gstreamer1.0-x gstreamer1.0-alsa gstreamer1.0-gl gstreamer1.0-gtk3
sudo apt install -y gstreamer1.0-qt5 gstreamer1.0-pulseaudio
sudo apt install -y ccache
sudo apt install -y libpng-dev libjpeg-dev libopenexr-dev libtiff-dev libwebp-dev
sudo apt install -y libvtk9.1 libvtk9-dev
sudo apt install -y qtbase5-dev
sudo apt install -y libgtk2.0-dev libgtk-3-dev libgtkglext1 libgtkglext1-dev
sudo apt install -y libva-dev vainfo
sudo apt install -y libatlas-base-dev liblapacke-dev libatlas3-base
sudo apt install -y libeigen3-dev
sudo apt install -y tesseract-ocr libtesseract-dev
sudo apt install -y libogre-1.12-dev
sudo apt install -y libhdf5-dev
#sudo apt install -y libdc1394-25 libdc1394-dev libopenblas-dev
#sudo apt install -y libtbb2 libtbb-dev
#sudo apt install -y liblapack-dev
#sudo apt install -y libavcodec-dev libavformat-dev libswscale-dev
#sudo apt install -y libpng-dev libjpeg-dev libtiff-dev libopenexr-dev libwebp-dev
#sudo apt install -y qtbase5-dev qt5-qmake qttools5-dev qttools5-dev-tools qtwebengine5-dev libqt5svg5-dev libqt5websockets5-dev
#sudo apt install -y libv4l-dev libxvidcore-dev libx264-dev
#sudo apt install -y gfortran openexr

# Java
sudo apt install -y default-jdk ant
echo 'export JAVA_HOME=/usr/lib/jvm/default-java' >> ~/.bashrc
source .bashrc

# OpenJPEG
mkdir OpenJPEG && cd OpenJPEG
wget https://github.com/uclouvain/openjpeg/archive/master.zip
unzip master.zip
cd openjpeg-master/ && mkdir build && cd build
cmake -DCMAKE_BUILD_TYPE=Release ..
make
sudo make install
sudo make clean
cd .. && cd .. && cd .. && rm -rf OpenJPEG

# glog
#sudo apt install -y libgoogle-glog-dev
git clone https://github.com/google/glog/
cd glog && mkdir build && cd build
cmake ..
sudo make install
cd .. && cd .. && sudo rm -rf glog

# gflags
#sudo apt install -y libgflags-dev
git clone https://github.com/gflags/gflags
cd gflags && mkdir build && cd build
cmake ..
sudo make install
cd .. && cd .. && sudo rm -rf gflags

# ceres-solver
#mkdir ceresSolver && cd ceresSolver
#wget http://ceres-solver.org/ceres-solver-2.2.0.tar.gz
#tar zxf ceres-solver-2.2.0.tar.gz
#mkdir ceres-bin && cd ceres-bin
#cmake ../ceres-solver-2.2.0
#make -j3
#make test
#sudo make install
#cd .. && cd .. && rm -rf ceresSolver

echo '---------------Build---------------'
cd ~
#wget -O opencv.zip https://github.com/opencv/opencv/archive/4.9.0.zip
#wget -O opencv_contrib.zip https://github.com/opencv/opencv_contrib/archive/4.9.0.zip
unzip opencv-4.9.0.zip
unzip opencv_contrib-4.9.0.zip
mv opencv-4.9.0 opencv
mv opencv_contrib-4.9.0 opencv_contrib
cd opencv && mkdir build && cd build

cmake \
-D CMAKE_BUILD_TYPE=RELEASE \
-D CMAKE_INSTALL_PREFIX=/usr/local \
-D WITH_CUDA=ON \
-D WITH_CUDNN=ON \
-D CUDA_ARCH_BIN=7.5 \
-D OPENCV_DNN_CUDA=ON \
-D WITH_TBB=ON \
-D WITH_CUBLAS=ON \
-D OPENCV_ENABLE_NONFREE=ON \
-D OPENCV_EXTRA_MODULES_PATH=$HOME/opencv_contrib/modules \
-D HAVE_opencv_python3=OFF \
-D BUILD_EXAMPLES=OFF \
-D WITH_QT=ON \
-D WITH_V4L=ON \
-D ENABLE_FAST_MATH=1 \
-D CUDA_FAST_MATH=1 \
-D ENABLE_CXX11=ON \
-D WITH_OPENGL=ON \
-D WITH_EIGEN=ON \
-D OPENCV_GENERATE_PKGCONFIG=YES \
..

#-D BUILD_opencv_sfm=OFF \

echo '---------------Install---------------'
make -j$(nproc)
sudo make install
sudo ldconfig

#sudo ln -s /usr/local/lib/python3.*/site-packages/cv2 /usr/local/lib/python3.*/dist-packages/

cd ~ && sudo rm -rf opencv opencv_contrib


##########################################################################################################
# Test opencv in python3
# use this command in terminal
#python3
#import cv2
#cv2.cuda.printCudaDeviceInfo(0)

##########################################################################################################
# Failed logs:

# -- Could NOT find PythonInterp (missing: PYTHON_EXECUTABLE) (Required is at least version "2.7")

#-- Performing Test HAVE_C_WNON_VIRTUAL_DTOR - Failed

#-- Performing Test HAVE_CXX_WMISSING_PROTOTYPES - Failed

#-- Performing Test HAVE_CXX_WSTRICT_PROTOTYPES - Failed

#-- Performing Test HAVE_C_WSIGN_PROMO - Failed

#-- Performing Test HAVE_C_WSUGGEST_OVERRIDE - Failed

#-- Performing Test HAVE_C_WNO_DELETE_NON_VIRTUAL_DTOR - Failed

#-- Performing Test HAVE_CXX_WNO_UNNAMED_TYPE_TEMPLATE_ARGS - Failed

#-- Performing Test HAVE_C_WNO_UNNAMED_TYPE_TEMPLATE_ARGS - Failed

#-- Performing Test HAVE_C_FVISIBILITY_INLINES_HIDDEN - Failed

#-- NVCUVID: Header not found, WITH_NVCUVID requires Nvidia decoding library header /usr/local/cuda;/usr/local/cuda/include/nvcuvid.h
#-- NVCUVENC: Header not found, WITH_NVCUVENC requires Nvidia encoding library header /usr/local/cuda;/usr/local/cuda/include/nvEncodeAPI.h

#-- Could not find OpenBLAS include. Turning OpenBLAS_FOUND off
#-- Could not find OpenBLAS lib. Turning OpenBLAS_FOUND off

#-- Performing Test HAVE_CXX_WNO_MISSING_PROTOTYPES - Failed

#-- Performing Test HAVE_CXX_WNO_TAUTOLOGICAL_UNDEFINED_COMPARE - Failed

#-- Performing Test HAVE_CXX_WNO_SHORTEN_64_TO_32 - Failed

#-- Performing Test HAVE_CXX_WNO_ENUM_COMPARE_SWITCH - Failed

#-- Performing Test HAVE_CXX_WNO_INCONSISTENT_MISSING_OVERRIDE - Failed

#-- Performing Test HAVE_CXX_WNO_COMMA - Failed

#-- Checking for module 'libavresample'
#--   No package 'libavresample' found

#-- Julia not found. Not compiling Julia Bindings. 

#-- CERES support is disabled. Ceres Solver for reconstruction API is required.

#-- CERES support is disabled. Ceres Solver for reconstruction API is required.


#-- Performing Test HAVE_CXX_WNO_UNUSED_PRIVATE_FIELD - Failed

#--   Version control:               unknown

#--     Version control (extra):     unknown

#--     Precompiled headers:         NO

#--     Disabled:                    world
#--     Unavailable:                 cannops gapi julia matlab python2
#--     Documentation:               NO

#--       avresample:                NO

#--     Custom HAL:                  NO


#--   Java:                          
#--     ant:                         NO
#--     Java tests:                  NO
