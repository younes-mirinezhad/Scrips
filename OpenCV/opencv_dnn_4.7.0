#!/bin/bash

# Tested on ubuntu 20.04 and 22.04

echo '---------------Update---------------'
sudo apt -y update
sudo apt -y upgrade

echo '---------------dependencies---------------'
sudo apt install -y cmake gcc g++ git pkg-config build-essential 

echo '---------------Python3---------------'
sudo apt install -y python3 python3-pip python3-dev python3-numpy

echo '---------------GStreamer and FFMPEG---------------'
sudo apt install -y libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libgstreamer-plugins-bad1.0-dev gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly gstreamer1.0-libav gstreamer1.0-tools gstreamer1.0-x gstreamer1.0-alsa gstreamer1.0-gl gstreamer1.0-gtk3 gstreamer1.0-qt5 gstreamer1.0-pulseaudio

echo '---------------VA: VIDEO ACCELERATION---------------'
sudo apt install -y libva-dev vainfo

echo '---------------GTK and OpenGL---------------'
sudo apt install -y libgtk2.0-dev libgtk-3-dev libgtkglext1 libgtkglext1-dev

echo '---------------EIGEN---------------'
sudo apt install -y libeigen3-dev

echo '---------------QT---------------'
sudo apt install -y qtbase5-dev

echo '---------------Atlas and Lapack---------------'
sudo apt install -y libatlas-base-dev liblapacke-dev libatlas3-base

echo '---------------HDF5---------------'
sudo apt install -y libhdf5-dev

echo '---------------tesseract---------------'
sudo apt install -y tesseract-ocr libtesseract-dev

echo '---------------VTK Ubuntu 22.04---------------'
sudo apt install -y libvtk9.1 libvtk9-dev # Ubuntu 22.04

echo '---------------VTK Ubuntu 20.04---------------'
version=$(lsb_release -rs)
if [ "$version" == "22.04" ]; then
	sudo apt install -y libvtk7.1p libvtk7-dev # Ubuntu 22.04
elif [ "$version" == "20.04" ]; then
	sudo apt install -y libvtk6.3 libvtk6-dev # Ubuntu 20.04
fi

echo '---------------OGRE3D---------------'
sudo apt install -y libogre-1.12-dev

echo '---------------ccache---------------'
sudo apt install -y ccache

echo '---------------Java and JNI---------------'
sudo apt install -y default-jdk ant
echo 'export JAVA_HOME=/usr/lib/jvm/default-java' >> ~/.bashrc
source ~/.bashrc

echo '---------------OpenJPEG---------------'
mkdir OpenJPEG && cd OpenJPEG
wget https://github.com/uclouvain/openjpeg/archive/master.zip
unzip master.zip
cd openjpeg-master/ && mkdir build && cd build
cmake -DCMAKE_BUILD_TYPE=Release ..
make
sudo make install
sudo make clean
cd .. && cd .. && cd .. && rm -rf OpenJPEG

echo '---------------glog---------------'
#sudo apt install -y libgoogle-glog-dev

git clone https://github.com/google/glog/
cd glog && mkdir build && cd build
cmake ..
sudo make install
cd .. && cd .. && sudo rm -rf glog

echo '---------------gflags---------------'
#sudo apt install -y libgflags-dev

git clone https://github.com/gflags/gflags
cd gflags && mkdir build && cd build
cmake ..
sudo make install
cd .. && cd .. && sudo rm -rf gflags

echo '---------------Other---------------'
sudo apt install -y libdc1394-25 libdc1394-dev libopenblas-dev
sudo apt install -y libtbb2 libtbb-dev
sudo apt install -y liblapack-dev
sudo apt install -y libavcodec-dev libavformat-dev libswscale-dev
sudo apt install -y libpng-dev libjpeg-dev libtiff-dev libopenexr-dev libwebp-dev
sudo apt install -y qtbase5-dev qt5-qmake qttools5-dev qttools5-dev-tools qtwebengine5-dev libqt5svg5-dev libqt5websockets5-dev

sudo apt install -y libv4l-dev libxvidcore-dev libx264-dev
sudo apt install -y gfortran openexr


echo '---------------Build---------------'
cd ~
#wget -O opencv.zip https://github.com/opencv/opencv/archive/4.7.0.zip
#wget -O opencv_contrib.zip https://github.com/opencv/opencv_contrib/archive/4.7.0.zip
unzip opencv.zip
unzip opencv_contrib.zip
mv opencv-4.7.0 opencv
mv opencv_contrib-4.7.0 opencv_contrib
cd ~/opencv && mkdir build && cd build

cmake \
-D CMAKE_BUILD_TYPE=RELEASE \
-D CMAKE_INSTALL_PREFIX=/usr/local \
-D WITH_CUDA=ON \
-D WITH_CUDNN=ON \
-D CUDA_ARCH_BIN=7.5 \
-D OPENCV_DNN_CUDA=ON \
-D WITH_TBB=ON \
-D WITH_CUBLAS=ON \
-D OPENCV_ENABLE_NONFREE=ON \
-D OPENCV_EXTRA_MODULES_PATH=$HOME/opencv_contrib/modules \
-D HAVE_opencv_python3=ON \
-D BUILD_EXAMPLES=OFF \
-D WITH_QT=ON \
-D WITH_V4L=ON \
-D ENABLE_FAST_MATH=1 \
-D CUDA_FAST_MATH=1 \
-D ENABLE_CXX11=ON \
-D WITH_OPENGL=ON \
-D WITH_EIGEN=ON \
-D OPENCV_GENERATE_PKGCONFIG=YES \
..

echo '---------------Install---------------'
make -j$(nproc)
sudo make install
sudo ldconfig

sudo ln -s /usr/local/lib/python3.*/site-packages/cv2 /usr/local/lib/python3.*/dist-packages/

cd ~ && sudo rm -rf opencv opencv_contrib

##########################################################################################################
# Test opencv in python3
# use this command in terminal
#python3
#import cv2
#cv2.cuda.printCudaDeviceInfo(0)

##########################################################################################################
# Failed logs:

# -- Could NOT find PythonInterp (missing: PYTHON_EXECUTABLE) (Required is at least version "2.7")

#-- Performing Test HAVE_C_WNON_VIRTUAL_DTOR - Failed

#-- Performing Test HAVE_CXX_WMISSING_PROTOTYPES - Failed

#-- Performing Test HAVE_CXX_WSTRICT_PROTOTYPES - Failed

#-- Performing Test HAVE_C_WSIGN_PROMO - Failed

#-- Performing Test HAVE_C_WSUGGEST_OVERRIDE - Failed

#-- Performing Test HAVE_C_WNO_DELETE_NON_VIRTUAL_DTOR - Failed

#-- Performing Test HAVE_CXX_WNO_UNNAMED_TYPE_TEMPLATE_ARGS - Failed

#-- Performing Test HAVE_C_WNO_UNNAMED_TYPE_TEMPLATE_ARGS - Failed

#-- Performing Test HAVE_C_FVISIBILITY_INLINES_HIDDEN - Failed

#-- Could not find OpenBLAS include. Turning OpenBLAS_FOUND off

#-- Could not find OpenBLAS lib. Turning OpenBLAS_FOUND off

#-- Performing Test HAVE_CXX_WNO_MISSING_PROTOTYPES - Failed

#-- Performing Test HAVE_CXX_WNO_TAUTOLOGICAL_UNDEFINED_COMPARE - Failed

#-- Performing Test HAVE_CXX_WNO_SHORTEN_64_TO_32 - Failed

#-- Performing Test HAVE_CXX_WNO_ENUM_COMPARE_SWITCH - Failed

#-- Performing Test HAVE_CXX_WNO_INCONSISTENT_MISSING_OVERRIDE - Failed

#--   No package 'libavresample' found

#-- Julia not found. Not compiling Julia Bindings. 

# -- Performing Test HAVE_CXX_WNO_UNUSED_PRIVATE_FIELD - Failed

#--     Unavailable:                 julia matlab python2

#--       avresample:                NO

#--     Custom HAL:                  NO


